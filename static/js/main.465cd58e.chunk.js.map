{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","activeTodo","setActiveTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","setFilteredTodos","useState","filterMethod","setFilterMethod","query","setQuery","useEffect","copy","filter","toLowerCase","includes","filterTodos","onChange","event","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","userId","isLoading","setIsLoading","activeUser","setActiveUser","finally","href","email","name","App","setTodos","filteredTodos","ReactDOM","render","document","getElementById"],"mappings":"oPAWaA,EAA4B,SAAC,GAInC,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,WACAC,EACI,EADJA,cAEA,OACE,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGH,EAAMI,KAAI,SAACC,GACV,OACE,qBACE,UAAQ,OACRF,UAAWG,IACT,CAAE,4BAA6BD,EAAKE,MAAL,OAAYN,QAAZ,IAAYA,OAAZ,EAAYA,EAAYM,MAH3D,UAOE,oBAAIJ,UAAU,eAAd,SAA8BE,EAAKE,KAEnC,oBAAIJ,UAAU,eAAd,SACGE,EAAKG,WACJ,sBAAML,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAKnB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWG,IAAW,CACvB,mBAAoBD,EAAKG,UACzB,mBAAoBH,EAAKG,YAF3B,SAKGH,EAAKI,UAIV,oBAAIN,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVO,KAAK,SACLC,QAAS,kBAAMT,EAAcG,IAJ/B,SAME,sBAAMF,UAAU,OAAhB,SACE,mBAAGA,UAAWG,IAAW,MAAO,CAC9B,eAAgBD,EAAKE,MAAL,OAAYN,QAAZ,IAAYA,OAAZ,EAAYA,EAAYM,IACxC,SAAUF,EAAKE,MAAL,OAAYN,QAAZ,IAAYA,OAAZ,EAAYA,EAAYM,gBAhCrCF,EAAKE,a,OCNjB,IAAMK,EAA8B,SAAC,GAAiC,IAA/BZ,EAA8B,EAA9BA,MAAOa,EAAuB,EAAvBA,iBACnD,EAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAMA,OAJAC,qBAAU,WACRN,EAnCJ,SACEb,EACAe,EACAE,GAEA,IAAIG,EAAI,YAAOpB,GAiBf,OAfIiB,IACDG,EAAO,YAAIpB,GACTqB,QAAO,SAAAhB,GAAI,OAAIA,EAAKI,MAClBa,cACAC,SAASN,EAAMK,mBAGD,WAAjBP,IACDK,EAAOA,EAAKC,QAAO,SAAAhB,GAAI,OAAKA,EAAKG,cAGf,cAAjBO,IACDK,EAAOA,EAAKC,QAAO,SAAAhB,GAAI,OAAIA,EAAKG,cAG5BY,EAaYI,CAAYxB,EAAOe,EAAcE,MACjD,CAACA,EAAOF,EAAcf,EAAOa,IAG9B,uBAAMV,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRsB,SAAU,SAAAC,GAAK,OAAIV,EAAgBU,EAAMC,OAAOC,QAFlD,UAIE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGzB,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRO,KAAK,OACLP,UAAU,QACV0B,YAAY,YACZD,MAAOX,EACPQ,SAAU,SAAAC,GAAK,OAAIR,EAASQ,EAAMC,OAAOC,UAG3C,sBAAMzB,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGbc,GACA,sBAAMd,UAAU,gBAAgB2B,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRrB,KAAK,SACLP,UAAU,SACVQ,QAAS,kBAAMO,EAAS,gBC1EzBc,G,MAAmB,kBAC9B,qBAAK7B,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCSnB,SAAS8B,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICZMC,EAA6B,SAAC,GAGpC,IDWiBC,ECbtB5C,EAEI,EAFJA,WACAC,EACI,EADJA,cAEA,EAAkCY,oBAAS,GAA3C,mBAAOgC,EAAP,KAAkBC,EAAlB,KACA,EAAoCjC,mBAAsB,MAA1D,mBAAOkC,EAAP,KAAmBC,EAAnB,KAQA,OANIhD,IDOkB4C,ECNX5C,EAAW4C,ODMmBZ,EAAG,iBAAiBY,KCLxDL,KAAKS,GACLC,SAAQ,kBAAMH,GAAa,MAI9B,sBAAK5C,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEd2C,EACI,cAAC,EAAD,IAED,sBAAK3C,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,sBACEA,UAAU,0CACV,UAAQ,eAFV,0BAKGF,QALH,IAKGA,OALH,EAKGA,EAAYM,MAIf,wBACEG,KAAK,SACLP,UAAU,SACV,UAAQ,cACRQ,QAAS,kBAAMT,EAAc,YAIjC,sBAAKC,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,gBACGF,QADH,IACGA,OADH,EACGA,EAAYQ,QAGf,oBAAGN,UAAU,QAAQ,UAAQ,aAA7B,UACa,OAAVF,QAAU,IAAVA,KAAYO,UACR,wBAAQL,UAAU,mBAAlB,kBACA,wBAAQA,UAAU,kBAAlB,qBAEJ,OAED,mBAAGgD,KAAI,wBAAYH,QAAZ,IAAYA,OAAZ,EAAYA,EAAYI,OAA/B,gBACGJ,QADH,IACGA,OADH,EACGA,EAAYK,oBCpDlBC,EAAgB,WAC3B,MAAkCxC,oBAAS,GAA3C,mBAAOgC,EAAP,KAAkBC,EAAlB,KACA,EAA0BjC,mBAAiB,IAA3C,mBAAOd,EAAP,KAAcuD,EAAd,KACA,EAAoCzC,mBAAsB,MAA1D,mBAAOb,EAAP,KAAmBC,EAAnB,KACA,EAA0CY,mBAAiB,IAA3D,mBAAO0C,EAAP,KAAsB3C,EAAtB,KAMA,OAJAM,qBAAU,WFMkBc,EAAY,UEL3BO,KAAKe,GAAUL,SAAQ,kBAAMH,GAAa,QACpD,IAGD,qCACE,sBAAK5C,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEH,MAAOA,EACPa,iBAAkBA,MAItB,qBAAKV,UAAU,QAAf,SACG2C,EACI,cAAC,EAAD,IAED,cAAC,EAAD,CACE9C,MAAOwD,EACPvD,WAAYA,EACZC,cAAeA,SAMxBD,GACC,cAAC,EAAD,CACEA,WAAYA,EACZC,cAAeA,QC/CzBuD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.465cd58e.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  activeTodo: Todo | null,\n  setActiveTodo: (activeTodo: Todo) => void,\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  activeTodo,\n  setActiveTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => {\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={classNames(\n                { 'has-background-info-light': todo.id === activeTodo?.id },\n              )}\n              key={todo.id}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames({\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                })}\n                >\n                  {todo.title}\n                </p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setActiveTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames('far', {\n                      'fa-eye-slash': todo.id === activeTodo?.id,\n                      'fa-eye': todo.id !== activeTodo?.id,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\nfunction filterTodos(\n  todos: Todo[],\n  filterMethod: string,\n  query: string,\n): Todo[] {\n  let copy = [...todos];\n\n  if (query) {\n    (copy = [...todos]\n      .filter(todo => todo.title\n        .toLowerCase()\n        .includes(query.toLowerCase())));\n  }\n\n  if (filterMethod === 'active') {\n    (copy = copy.filter(todo => !todo.completed));\n  }\n\n  if (filterMethod === 'completed') {\n    (copy = copy.filter(todo => todo.completed));\n  }\n\n  return copy;\n}\n\ntype Props = {\n  todos: Todo[];\n  setFilteredTodos: (todos: Todo[]) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({ todos, setFilteredTodos }) => {\n  const [filterMethod, setFilterMethod] = useState('');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setFilteredTodos(filterTodos(todos, filterMethod, query));\n  }, [query, filterMethod, todos, setFilteredTodos]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={event => setFilterMethod(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => setQuery(event.target.value)}\n        />\n\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {(query) && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState } from 'react';\n\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ninterface Props {\n  activeTodo: Todo | null,\n  setActiveTodo: (todo: Todo | null) => void,\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  activeTodo,\n  setActiveTodo,\n}) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [activeUser, setActiveUser] = useState<User | null>(null);\n\n  if (activeTodo) {\n    (getUser(activeTodo.userId)\n      .then(setActiveUser)\n      .finally(() => setIsLoading(false)));\n  }\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading\n        ? (<Loader />)\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                Todo #\n                {activeTodo?.id}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => setActiveTodo(null)}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {activeTodo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {activeTodo?.completed\n                  ? (<strong className=\"has-text-success\">Done</strong>)\n                  : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n                {' by '}\n\n                <a href={`mailto:${activeUser?.email}`}>\n                  {activeUser?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Todo } from './types/Todo';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [activeTodo, setActiveTodo] = useState<Todo | null>(null);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    getTodos().then(setTodos).finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <h1 className=\"title\">Todos:</h1>\n\n        <div className=\"block\">\n          <TodoFilter\n            todos={todos}\n            setFilteredTodos={setFilteredTodos}\n          />\n        </div>\n\n        <div className=\"block\">\n          {isLoading\n            ? (<Loader />)\n            : (\n              <TodoList\n                todos={filteredTodos}\n                activeTodo={activeTodo}\n                setActiveTodo={setActiveTodo}\n              />\n            )}\n        </div>\n      </div>\n\n      {activeTodo && (\n        <TodoModal\n          activeTodo={activeTodo}\n          setActiveTodo={setActiveTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}